Provider:
    type: entity
    table: providers
    repositoryClass: Providers
    id:
        person:
            associationKey: true
    fields:
        dateCreated:
            type: datetime
            nullable: false
            column: date_created
        dateModified:
            type: datetime
            nullable: true
            column: date_modified
        npiNumber:
            type: string
            nullable: true
            column: npi_number
        position:
            type: string
            nullable: true
    oneToOne:
        person:
            targetEntity: Person
            cascade: [ persist ]
            fetch: LAZY
            mappedBy: null
            inversedBy: null
            joinColumns:
                person:
                    referencedColumnName: id
                    onDelete: CASCADE
            orphanRemoval: false
    manyToMany:
        states:
            targetEntity: State
            cascade: {  }
            fetch: EAGER
            mappedBy: null
            inversedBy: providers
            joinTable:
                name: state_providers
                joinColumns:
                    -
                        name: provider
                        referencedColumnName: person
                        onDelete: CASCADE
                inverseJoinColumns:
                    -
                        name: state
                        referencedColumnName: id
                        onDelete: CASCADE
            orderBy: null
            orphanRemoval: false
    lifecycleCallbacks: {  }
